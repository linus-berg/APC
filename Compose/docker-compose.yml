version: "3.8"
services:
# Infrastructure
  # required to run container syncs
  apc-prometheus:
    image: prom/prometheus:latest
    command:
      - --config.file=/etc/prometheus.yaml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
    ports:
      - "9090:9090"
    volumes:
      - "./prometheus.yml:/etc/prometheus.yaml:Z"
  
  apc-telemetry-otel:
    image: otel/opentelemetry-collector-contrib:0.79.0
    command: [ "--config=/etc/otel-collector.yaml" ]
    volumes:
      - "./otel.yml:/etc/otel-collector.yaml:Z"
    extra_hosts: ["host.docker.internal:host-gateway"]

  apc-minio:
    image: minio/minio
    restart: always
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - "./volumes/minio:/data:Z"
    environment:
      MINIO_ROOT_USER: minio-dev
      MINIO_ROOT_PASSWORD: minio-dev
      MINIO_PROMETHEUS_URL: http://apc-prometheus:9090
      MINIO_PROMETHEUS_JOB_ID: minio-job
      MINIO_PROMETHEUS_AUTH_TYPE: public
    command: server --console-address ":9001" /data
  
  apc-internal-registry:
    image: registry:2.8
    restart: always
    ports:
      - "6000:5000"
    environment:
      REGISTRY_STORAGE: s3
      REGISTRY_STORAGE_S3_ACCESSKEY: minio-apc
      REGISTRY_STORAGE_S3_SECRETKEY: minio-apc
      REGISTRY_STORAGE_S3_REGIONENDPOINT: http://apc-minio:9000
      REGISTRY_STORAGE_S3_BUCKET: docker-registry
      REGISTRY_STORAGE_S3_SECURE: "false"
      REGISTRY_STORAGE_S3_region: ignored-for-minio
      REGISTRY_STORAGE_REDIRECT_DISABLE: "true"
    
  apc-mongo:
    image: mongo
    restart: always
    ports:
      - 27017:27017
    volumes:
      - "./volumes/mongo_data:/data/db:Z"
      - "./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro,Z"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

  apc-keycloak-db:
    image: postgres:13
    volumes:
      - "./volumes/kc_db:/var/lib/postgresql/data:Z"
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: pg
      POSTGRES_PASSWORD: pg123

  apc-keycloak:
    image: quay.io/keycloak/keycloak:20.0.3
    restart: always
    depends_on:
     - apc-keycloak-db
    command:
      - start --proxy edge --hostname-strict=false --hostname-url=http://localhost:8090 --db postgres --db-url-host apc-keycloak-db --db-username pg --db-password pg123
    ports:
      - 8090:8080
    volumes:
      - "./volumes/kc_data:/opt/keycloak/data/h2:Z"
    environment:
      PROXY_ADDRESS_FORWARDING: "true"
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin

  apc-mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@apc-mongo:27017/


  apc-ingest-redis:
    image: redis/redis-stack:6.2.6-v9
    container_name: apc-ingest-redis
    volumes:
      - "./volumes/redis_data:/data:Z"
    ports:
      - 6379:6379
      - 8001:8001

  apc-rabbitmq:
    image: masstransit/rabbitmq
    container_name: apc-rabbitmq
    ports:
      - 15672:15672
      - 5672:5672
  
